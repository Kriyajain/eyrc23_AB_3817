/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off t1a_fs_pwm -c t1a_fs_pwm --vector_source="/home/pranshi/intelFPGA_lite/20.1/Task1A/t1a_fs_pwm/Waveform.vwf" --testbench_file="/home/pranshi/intelFPGA_lite/20.1/Task1A/t1a_fs_pwm/simulation/qsim/Waveform.vwf.vt"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off t1a_fs_pwm -c t1a_fs_pwm --vector_source="/home/pranshi/intelFPGA_lite/20.1/Task1A/t1a_fs_pwm/Waveform.vwf" --testbench_file="/home/pranshi/intelFPGA_lite/20.1/Task1A/t1a_fs_pwm/simulation/qsim/Waveform.vwf.vt"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=verilog --output_directory="/home/pranshi/intelFPGA_lite/20.1/Task1A/t1a_fs_pwm/simulation/qsim/" t1a_fs_pwm -c t1a_fs_pwm</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=verilog --output_directory="/home/pranshi/intelFPGA_lite/20.1/Task1A/t1a_fs_pwm/simulation/qsim/" t1a_fs_pwm -c t1a_fs_pwm</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vlog -work work t1a_fs_pwm.vo
vlog -work work Waveform.vwf.vt
vsim -c -t 1ps -L cycloneive_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.t1a_fs_pwm_bdf_vlg_vec_tst
vcd file -direction t1a_fs_pwm.msim.vcd
vcd add -internal t1a_fs_pwm_bdf_vlg_vec_tst/*
vcd add -internal t1a_fs_pwm_bdf_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vlog -work work t1a_fs_pwm.vo
vlog -work work Waveform.vwf.vt
vsim -c -t 1ps -L cycloneive_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.t1a_fs_pwm_bdf_vlg_vec_tst
vcd file -direction t1a_fs_pwm.msim.vcd
vcd add -internal t1a_fs_pwm_bdf_vlg_vec_tst/*
vcd add -internal t1a_fs_pwm_bdf_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script_timing>
<hdl_lang>verilog</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 40000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk_50M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_195KHz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk_3125KHz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("duty_cycle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("duty_cycle[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty_cycle";
}

SIGNAL("duty_cycle[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty_cycle";
}

SIGNAL("duty_cycle[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty_cycle";
}

SIGNAL("duty_cycle[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty_cycle";
}

SIGNAL("pwm_signal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk_50M")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("clk_195KHz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 40000.0;
	}
}

TRANSITION_LIST("clk_3125KHz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 40000.0;
	}
}

TRANSITION_LIST("duty_cycle[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5128.0;
		LEVEL 1 FOR 5128.0;
		LEVEL 0 FOR 10256.0;
		LEVEL 1 FOR 5128.0;
		LEVEL 0 FOR 5128.0;
		LEVEL 1 FOR 5128.0;
		LEVEL 0 FOR 4104.0;
	}
}

TRANSITION_LIST("duty_cycle[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10256.0;
		LEVEL 0 FOR 15384.0;
		LEVEL 1 FOR 14360.0;
	}
}

TRANSITION_LIST("duty_cycle[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10256.0;
		LEVEL 0 FOR 5128.0;
		LEVEL 1 FOR 10256.0;
		LEVEL 0 FOR 14360.0;
	}
}

TRANSITION_LIST("duty_cycle[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5128.0;
		LEVEL 0 FOR 5128.0;
		LEVEL 1 FOR 5128.0;
		LEVEL 0 FOR 5128.0;
		LEVEL 1 FOR 15384.0;
		LEVEL 0 FOR 4104.0;
	}
}

TRANSITION_LIST("pwm_signal")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 40000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_50M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_195KHz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_3125KHz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "duty_cycle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "duty_cycle[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "duty_cycle[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "duty_cycle[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "duty_cycle[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "pwm_signal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
